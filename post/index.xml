<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Notes &amp; Cheatsheets</title><link>/post/</link><description>Recent content in Posts on Notes &amp; Cheatsheets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© 2020 by Aleksandar Radivojević</copyright><lastBuildDate>Wed, 03 Jun 2020 14:30:15 +0200</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Bridge Pattern</title><link>/bridge-pattern/</link><pubDate>Wed, 03 Jun 2020 14:30:15 +0200</pubDate><guid>/bridge-pattern/</guid><description>Bridge design pattern explained</description></item><item><title>Proxy Pattern</title><link>/proxy-pattern/</link><pubDate>Tue, 02 Jun 2020 13:42:47 +0200</pubDate><guid>/proxy-pattern/</guid><description>Proxy design pattern explained and it&amp;rsquo;s usecase</description></item><item><title>Template Method Pattern</title><link>/template-method-pattern/</link><pubDate>Mon, 01 Jun 2020 14:30:15 +0200</pubDate><guid>/template-method-pattern/</guid><description>Template method design pattern explained</description></item><item><title>Lazy Loading</title><link>/proxy-pattern/examples/lazy-loading/</link><pubDate>Wed, 13 May 2020 15:06:57 +0200</pubDate><guid>/proxy-pattern/examples/lazy-loading/</guid><description>WARNING the code is a mix between java and pseudocode, and should not be used directly
For this example imagine we have a large amount of data inside a database and we want to get a piece of data inside the database
So we have a Database class that reads a database and has String get(String key) method to get the data
interface IDatabase { String get(String key); } class Database implements IDatabase { Map&amp;lt;String, String&amp;gt; database = null; public Database(String path) { .</description></item><item><title>Displaying Fundamentally Different Data</title><link>/bridge-pattern/examples/displaying-fundamentally-different-data/</link><pubDate>Wed, 13 May 2020 14:30:15 +0200</pubDate><guid>/bridge-pattern/examples/displaying-fundamentally-different-data/</guid><description>WARNING the code is a mix between java and pseudocode, and should not be used directly
For this example imagine we have a GUI and we have three very different objects that we want to display
Let&amp;rsquo;s use Book, Car and House, and we have to be able to display them in short concise view (ThumbnailView) and long detailed view (DetailedView)
If we were to make a class for every combination there would be total of 6 classes and code repetition would be awful but with bridge pattern it&amp;rsquo;s a lot easier to extend with no code repetition</description></item></channel></rss>